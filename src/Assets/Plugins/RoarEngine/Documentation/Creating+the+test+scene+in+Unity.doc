Message-ID: <9753379.1.1356079791167.JavaMail.js-confluence@roarengine.atlassian.net>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_0_28677034.1356079791137"

------=_Part_0_28677034.1356079791137
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html>
    <head>
        <!-- MS Word on Windows doesn't realise the encoding is UTF-8 unles=
s this meta tag is present -->
        <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Du=
tf-8">
        <title>Creating the test scene in Unity</title>
        <style>
            body, p, td, table, tr, .bodytext, .stepfield {
=09            font-family: Arial, Helvetica, FreeSans, sans-serif;
            }
            .panel {
                margin: 10px;
                padding: 10px;
                border: 1px solid #999;
                background-color: #f0f0f0;
            }
            .noteMacro { border-style: solid; border-width: 1px; border-col=
or: #F0C000; background-color: #FFFFCE; text-align:left;}
            .warningMacro { border-style: solid; border-width: 1px; border-=
color: #c00; background-color: #fcc; text-align:left;}
            .infoMacro { border-style: solid; border-width: 1px; border-col=
or: #69c; background-color: #D8E4F1; text-align:left;}
            .tipMacro { border-style: solid; border-width: 1px; border-colo=
r: #090; background-color: #dfd; text-align:left;}
            .informationMacroPadding { padding: 5px 0 0 5px; }

            table.infoMacro td, table.warningMacro td, table.tipMacro td, t=
able.noteMacro td, table.sectionMacro td {
                border: none;
            }

            .grid {
                margin: 2px 0px 5px 0px;
                border-collapse: collapse;
            }
            .grid th  {
                border: 1px solid #ccc;
                padding: 2px 4px 2px 4px;
                background: #f0f0f0;
                text-align: center;
            }
            .grid td  {
                border: 1px solid #ccc;
                padding: 3px 4px 3px 4px;
            }           =20
        </style>
    </head>

    <body style=3D"background-color: white; padding: 10px;">
        <h1>Creating the test scene in Unity</h1>
        <p>This is meant to explain how to create the test scene usually fo=
und in the 'dev' folder of the Unity3D project. The test scene is a very si=
mple scene that utilizes a few widgets and can make calls to the roar engin=
e using these widgets. =C2=A0This document should be updated as and when th=
e test scene itself is updated with new features added to the Unity3D Roar =
plugin.</p><p>You start off with an empty scene and nothing but a camera. T=
o begin you need to add the main Roar system object. You do this through th=
e Unity menu (GameObject-&gt;Create Other-&gt;Roar-&gt;System Object). If t=
his menu is not available it means you are missing the Assets/Editor/Roaren=
gine/RoarObjectFactory.cs file. This will create a system object in your sc=
ene and this object is what you use to configure Roar. You need to enter yo=
ur game key in the 'Game Key' section here. This is the key that all calls =
using the Unity plugin will use.</p><p>You can now begin dropping widgets i=
nto your game. Widgets are small scripts that can be configured to display =
information from the roar server. You can create a widget either by going t=
o the menu at the top and selecting=C2=A0(GameObject-&gt;Create Other-&gt;R=
oar-&gt;). This will create an empty game object in your scene with the sel=
ected widget script attached. Currently the Stats, Rankings, Leaderboards, =
Shop and Friends list widgets are available.=C2=A0</p><p>If the widget you =
are looking for is not available in this menu and is in your project you ca=
n manually drop it onto any game object by looking for the .cs file and dra=
gging it onto an empty game object.=C2=A0</p><p>Widgets that are created ca=
n be configured by tweaking the custom inspector available when selecting a=
 widget. There are some common properties of all widgets such as whether th=
ey are a dragable window and their alignments on the screen. At the bottom =
are custom properties based on the type of widget selected. Look out for wa=
rnings and alerts from the inspector window such as content bounds with wid=
th and height being 0.=C2=A0</p><p>Finally you need a way to trigger the wi=
dgets to enable and disable them. The test scene uses 3d rotating cubes tha=
t when clicked on will toggle the 'enabled' property of the widget script o=
n the gameobject. You can use any means to enable and disable scripts but a=
void using GUI as they could interfere with the GUI of the widgets itself. =
A script like this will cause the widget component/script to toggle between=
 enable and disable on clicking on it:</p><pre>void OnMouseDown() {<br /> t=
arget.GetComponent&lt;RoarLeaderboardsWidget&gt;().enabled =3D ! target.Get=
Component&lt;RoarLeaderboardsWidget&gt;().enabled;<br /> }</pre><p>'target'=
 is the gameobject that holds the widget itself. Make sure the game object =
that holds this fragment has a collider attached to it.=C2=A0</p><p>=C2=A0<=
/p><p><strong>Notes:</strong></p><p><strong><br /></strong>1. The leaderboa=
rds widget needs to have the rankings widget open when you click on a leade=
rboard button for the ranking widget to catch the event and display the sel=
ected leaderboard.</p><p>2.=C2=A0</p>
    </body>
</html>
------=_Part_0_28677034.1356079791137--
